<!-- pagination  -->
<%
    paginationHelper = (paginationObj, currentStatus, collection, keyword) => { 
        let totalItems          = paginationObj.totalItems;
        let totalItemsPerPage   = paginationObj.totalItemsPerPage;
        let totalPages          = Math.ceil(totalItems/totalItemsPerPage);
        let currentPage         = pagination.currentPage
        let pageRanges          = pagination.pageRanges

        let to                  = totalItemsPerPage * currentPage;
        let from                = to - totalItemsPerPage + 1;

        if(to > totalItems) {
            to = totalItems
        }

        let xhtmlPagination     = '';     
        let xhtmlStart          = '';
        let xhtmlPrevious       = '';
        let xhtmlPages          = '';
        let xhtmlNext           = '';
        let xhtmlEnd            = '';

        <!-- Fix pagination -->
        if(totalPages > 1) {
            <!-- link dung chung  -->
            let link                = systemConfig.prefixAdmin + '/'+ collection + '/status/' + currentStatus;
            if(keyword !== '') {
                link += '?keyword=' + keyword + '&page=' ;
            } else {
                link += '?page='
            }
            <!-- Start Previous   xuất hiện khi  > 1 -->
            if(currentPage > 1) {
                xhtmlStart = `<li ><a href="${link}">Start</a></li>`;
                xhtmlPrevious = `<li ><a href="${link}${currentPage - 1}">Previous</a></li>`

            }
            <!-- Next End   xuất hiện khi < totalPages -->
            if(currentPage < totalPages) {
                xhtmlNext = `<li ><a href="${link}${currentPage + 1}">Next</a></li>`
                xhtmlEnd = `<li ><a href="${link}${totalPages}">End</a></li>`;
            }

            <!-- Pages  -->
            let middle = Math.ceil(pageRanges / 2)
            let min = currentPage - middle + 1;
            let max = min + pageRanges - 1;
            
            if(min <= 1) {
                min = 1;
                max = pageRanges;
            }

            if(max >= totalPages) {
                max = totalPages;
                min = (max - pageRanges + 1) > 1 ? (max - pageRanges + 1) : 1;
            }

            for(let i = min; i <= max; i++){
                if(i == currentPage) {
                    xhtmlPages += `<li class="active" ><a>${i}</a></li>`
                } else {
                    xhtmlPages += `<li ><a href="${link}${i}">${i}</a></li>`
                }
            }
            xhtmlPagination = '<ul class="pagination text-center">' + xhtmlStart + xhtmlPrevious + xhtmlPages + xhtmlNext + xhtmlEnd;
        }

        return `
        <div class="panel panel-info" id="pagination">
            <div class="panel-heading">
                Pagination
                <span class="label label-warning">Total pages: ${totalPages}</span>
                <span class="label label-danger">Total entries: ${totalItems}</span>
            </div>

            <div class="panel-body">
                <div class="infor-pagination">
                    <p>Number of entries on the page: <span>${totalPages}</span></p>
                    <p>Showing <span>${from}</span> to <span>${to}</span> of <span>${totalItems}</span> entries</p>
                </div>
                <div class="ad-pagination">
                    ${xhtmlPagination}
                </div>
            </div>
        </div>`; 
    } 
%>